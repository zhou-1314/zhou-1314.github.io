<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>文献美图汇总--火山图</title>
      <link href="/2023/12/13/learn-volcano/"/>
      <url>/2023/12/13/learn-volcano/</url>
      
        <content type="html"><![CDATA[<h4 id="火山图绘制–形式一"><a href="#火山图绘制–形式一" class="headerlink" title="火山图绘制–形式一"></a>火山图绘制–形式一</h4><p><strong>效果如下</strong></p><p><img src="https://s2.loli.net/2023/12/13/ZQWTw4CVefDylxR.png" alt="volcano1.png"></p><p><strong>相关代码：</strong></p><pre class="line-numbers language-R"><code class="language-R">library(ggplot2)setwd("C:/Users/Kevin/Desktop/R_Visualization/01.火山图")########## 普通火山图 ############ rm(list = ls())df <- read.table('diff_DEseq2.xls', header = TRUE, sep = "\t",row.names = 1)head(df)#对差异基因的p值从小到大排序df <- df[order(df$padj),]up.genes = head(df$gene[which(df$change == "up")],5)##低表达的基因中，选择adj.P.Val值最小的10个down.genes = head(df$gene[which(df$change == "down")],5)sig_genes <- df %>% filter(gene %in% c(up.genes, down.genes))up_genes <- df %>% filter(gene %in% up.genes)down_genes <- df %>% filter(gene %in% down.genes)table(df$change)df$change <- factor(df$change, levels = c('up','down','stable'))library(ggrepel)df %>%  ggplot(aes(x = log2FoldChange, y = -log10(padj))) +  # 绘制基础散点图，并根据 gene_type 对点的颜色进行分类，设置点的透明度 (alpha=0.6)，形状 (shape = 16)，大小 (size = 1)  geom_point(aes(color = change), alpha = 0.6, shape = 16, size = 2) +  # 从 up_genes 数据框中绘制特定形状的散点图，填充颜色为红色，边框颜色为黑色，大小为 2  geom_point(data = up_genes, shape = 21, size = 3, fill = "#C70E7BFF", colour = "#C70E7BFF") +  # 从 down_genes 数据框中绘制特定形状的散点图，填充颜色为钢蓝色，边框颜色为黑色，大小为 2  geom_point(data = down_genes, shape = 21, size = 3, fill = "#007BC3FF", colour = "#007BC3FF") +  # 添加水平虚线，y 轴截距为 -log10(0.05),表示显著性阈值为 0.05  geom_hline(yintercept = -log10(0.05), linetype = "dashed") +  # 添加垂直虚线，x 轴截距为 log2(0.5) 和 log2(2)，表示折叠变化范围为 0.5 到 2  geom_vline(xintercept = c(log2(0.5),log2(2)), linetype = "dashed") +  # 在图中显示 sig_genes 数据框中基因符号的标签  geom_label_repel(data = sig_genes, aes(label = gene), force = 2, nudge_y = 1) +  # 设置 gene_type 对应的颜色映射  scale_color_manual(values = c("up" = "#FC6882FF", "down" = "#54BCD1FF", "stable" = "grey"),                     labels = c(  "up 559", 'down 582', 'stable 19752')) +  # 设置 x 轴的刻度和范围  # scale_x_continuous(breaks = c(seq(-10, 10, 2)), limits = c(-10, 10)) +  # 设置 x 轴和 y 轴的标签  labs(x = "log2(fold change)", y = "-log10(adjusted P-value)", colour = "Expression change") +  # 调整图例外观，将图例大小设为 5，位置设置为右上角  guides(color = guide_legend(override.aes = list(size = 5))) +  theme_bw() + #  # 设置图的主题为白色背景  # 设置图的主题样式，包括边框、网格线、背景等  theme(panel.border = element_rect(colour = "black", fill = NA, size = 0.5),        panel.grid.minor = element_blank(),        panel.background = element_blank(),        plot.background = element_blank(),        axis.title = element_text( color = "black", size = 10),        axis.text = element_text(color = "black", size = 9),        legend.background = element_blank(),        legend.title = element_text( color = "black", size = 10),        legend.text = element_text( color = "black", size = 9),        legend.spacing.x = unit(0, "cm"),        legend.position = c(0.88, 0.89)  # 设置图例位置为右上角  )ggsave('volcano1.png',dpi = 300,bg = 'white',width = 8,height = 7)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="火山图绘制–形式二"><a href="#火山图绘制–形式二" class="headerlink" title="火山图绘制–形式二"></a>火山图绘制–形式二</h4><p><strong>效果如下</strong></p><p><img src="https://s2.loli.net/2023/12/13/PruAWCGfoE4QwSs.png" alt="volcano2.png"></p><p><strong>相关代码</strong></p><pre class="line-numbers language-R"><code class="language-R">########## 普通火山图2 ############ rm(list = ls())####----load R Package----####library(tidyverse)library(ggrepel)library(ggfun)library(grid)####----load data----####df <- read.table('diff_DEseq2.xls', header = TRUE, sep = "\t",row.names = 1)####----plot----####ggplot(data = df) +   geom_point(aes(x = log2FoldChange, y = -log10(padj),                  color = log2FoldChange,                 size = -log10(padj))) +   geom_point(data =  df %>%               tidyr::drop_na() %>%               dplyr::filter(change != "stable") %>%               dplyr::arrange(desc(-log10(padj))) %>%               dplyr::slice(1:20),             aes(x = log2FoldChange, y = -log10(padj),                 # fill = log2FoldChange,                 size = -log10(padj)),             shape = 21, show.legend = F, color = "#000000") +  geom_text_repel(data =  df %>%                     tidyr::drop_na() %>%                     dplyr::filter(change != "stable") %>%                    dplyr::arrange(desc(-log10(padj))) %>%                    dplyr::slice(1:15) %>%                    dplyr::filter(change == "up"),                  aes(x = log2FoldChange, y = -log10(padj), label = gene),                  box.padding = 0.5,                  nudge_x = 0.5,                  nudge_y = 0.2,                  segment.curvature = -0.1,                  segment.ncp = 3,                  # segment.angle = 10,                  direction = "y",                   hjust = "left"  ) +   geom_text_repel(data =  df %>%                     tidyr::drop_na() %>%                     dplyr::filter(change != "stable") %>%                    dplyr::arrange(desc(-log10(padj))) %>%                    dplyr::slice(1:15) %>%                    dplyr::filter(change == "down"),                  aes(x = log2FoldChange, y = -log10(padj), label = gene),                  box.padding = 0.5,                  nudge_x = -0.2,                  nudge_y = 0.2,                  segment.curvature = -0.1,                  segment.ncp = 3,                  segment.angle = 20,                  direction = "y",                   hjust = "right"  ) +   scale_color_gradientn(colours = c("#3288bd", "#66c2a5","#ffffbf", "#f46d43", "#9e0142"),                        values = seq(0, 1, 0.2)) +  scale_fill_gradientn(colours = c("#3288bd", "#66c2a5","#ffffbf", "#f46d43", "#9e0142"),                       values = seq(0, 1, 0.2)) +  geom_vline(xintercept = c(-log2(1.5), log2(1.5)), linetype = 2) +  geom_hline(yintercept = -log10(0.05), linetype = 4) +   scale_size(range = c(1,7)) +   # ggtitle(label = "Volcano Plot",  #         subtitle = "volcano plot") +   # xlim(c(-3, 3)) +   # ylim(c(-1, 90)) +   theme_bw() +   theme(panel.grid = element_blank(),        legend.background = element_roundrect(color = "#808080", linetype = 1),        axis.text = element_text(size = 13, color = "#000000"),        axis.title = element_text(size = 15),        plot.title = element_text(hjust = 0.5),        plot.subtitle = element_text(hjust = 0.5)  ) +   annotate(geom = "text", x = 2.5, y = 0.25, label = "p = 0.05", size = 5) +   coord_cartesian(clip = "off") +   annotation_custom(    grob = grid::segmentsGrob(      y0 = unit(-10, "pt"),      y1 = unit(-10, "pt"),      arrow = arrow(angle = 45, length = unit(.2, "cm"), ends = "first"),      gp = grid::gpar(lwd = 3, col = "#74add1")    ),     xmin = range(df$log2FoldChange)[1]/10*9,     xmax = range(df$log2FoldChange)[1]/10*4,    ymin = range(-log10(df$padj))[2]/10*9.5,    ymax = range(-log10(df$padj))[2]/10*9.5  ) +  annotation_custom(    grob = grid::textGrob(      label = "Down",      gp = grid::gpar(col = "#74add1")    ),    xmin = range(df$log2FoldChange)[1]/10*9,     xmax = range(df$log2FoldChange)[1]/10*4,    ymin = range(-log10(df$padj))[2]/10*9.5,    ymax = range(-log10(df$padj))[2]/10*9.5  ) +  annotation_custom(    grob = grid::segmentsGrob(      y0 = unit(-10, "pt"),      y1 = unit(-10, "pt"),      arrow = arrow(angle = 45, length = unit(.2, "cm"), ends = "last"),      gp = grid::gpar(lwd = 3, col = "#d73027")    ),     xmin = range(df$log2FoldChange)[2]/10*9,     xmax = range(df$log2FoldChange)[2]/10*4,    ymin = range(-log10(df$padj))[2]/10*9.5,    ymax = range(-log10(df$padj))[2]/10*9.5  ) +  annotation_custom(    grob = grid::textGrob(      label = "Up",      gp = grid::gpar(col = "#d73027")    ),    xmin = range(df$log2FoldChange)[2]/10*9,     xmax = range(df$log2FoldChange)[2]/10*4,    ymin = range(-log10(df$padj))[2]/10*9.5,    ymax = range(-log10(df$padj))[2]/10*9.5  ) ####----save result----####ggsave('volcano2.png',dpi = 300,bg = 'white',width = 8,height = 7)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="火山图绘制–形式三"><a href="#火山图绘制–形式三" class="headerlink" title="火山图绘制–形式三"></a>火山图绘制–形式三</h4><p><strong>效果如下</strong></p><p><img src="https://s2.loli.net/2023/12/13/CQueAYF3XOd4bxz.png" alt="volcano3.png"></p><p><strong>相关代码</strong></p><pre class="line-numbers language-R"><code class="language-R">########## 渐变火山图3 ############ rm(list = ls())library(ggplot2) #绘图使用library(cowplot) #调整背景library(ggrepel) #加标签####----load data----####df <- read.table('diff_DEseq2.xls', header = TRUE, sep = "\t",row.names = 1)df$log10FDR <- -log10(df$padj)#新加一列labeldf$label = ""#对差异基因的p值从小到大排序df <- df[order(df$padj),]#高表达的基因中，选择FDR值最小的10个up.genes = head(df$gene[which(df$change == "up")],10)##低表达的基因中，选择FDR值最小的10个down.genes = head(df$gene[which(df$change == "down")],10)#将高表达基因和低表达基因合并，加入到label中deg.top10.genes <- c(as.character(up.genes),as.character(down.genes))df$label[match(deg.top10.genes,df$gene)] <- deg.top10.genes# 设置点的大小max_size <- 4min_size <- 1df$Size <- sqrt(min_size + (max_size - min_size) * (df$log10FDR - min(df$log10FDR)) / (max(df$log10FDR) - min(df$log10FDR)))##绘图ggplot(df,aes(log2FoldChange, -log10(padj)))+  # 横向水平参考线：  geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "#999999")+  # 纵向垂直参考线：  geom_vline(xintercept = c(-1.2,1.2), linetype = "dashed", color = "#999999")+  # 散点图:  geom_point(aes(size=Size, color= -log10(padj)))+  # 指定颜色渐变模式：  scale_color_gradientn(values = seq(0,1,0.2),                        colors = c("#39489f","#39bbec","#f9ed36","#f38466","#b81f25"))+  # 指定散点大小渐变模式：  scale_size_continuous(range = c(0.5,4))+  # 主题调整：  theme_bw()+  # 调整主题和图例位置：  theme(panel.grid = element_blank(),        legend.position = c(0.01,0.8),        legend.justification = c(0,1)  )+  # 设置部分图例不显示：  guides(col = guide_colourbar(title = "-Log10_p-value"),         size = "none")+  # 添加标签：  geom_text(aes(label=label, color = -log10(padj)), size = 3, vjust = 1.5, hjust=1)+  # 修改坐标轴：  xlab("Log2FC")+  ylab("-Log10(FDR p-value)")####----save result----####ggsave('volcano3.png',dpi = 300,bg = 'white',width = 8,height = 7)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="火山图绘制–形式四"><a href="#火山图绘制–形式四" class="headerlink" title="火山图绘制–形式四"></a>火山图绘制–形式四</h4><p><strong>效果如下</strong></p><p><img src="https://s2.loli.net/2023/12/13/D9FX68rInkpGsOS.png" alt="volcano4.png"></p><p><strong>相关代码</strong></p><pre class="line-numbers language-R"><code class="language-R">########## 火山图4 ############ rm(list = ls())#相关R包载入：library(ggplot2)library(ggrepel)library(dplyr)library(patchwork)# 横坐标A—组间表达量的平均强度：# (log2(Mean_expA*Mean_expD))/2# 纵坐标M—组间差异倍数取以2为底的对数值：# log2FC####----load data----####df <- read.table('diff_DEseq2.xls', header = TRUE, sep = "\t",row.names = 1)#新建横纵坐标列：df$log2baseMean <- log2(df$baseMean)#ggplot2绘图：#自定义颜色：mycol <- c("#EB4232","grey90","#2DB2EB")#自定义主题：mytheme <- theme_classic() +  theme(plot.title = element_text(size = 17),        axis.title = element_text(size = 15),        axis.text = element_text(size = 14),        legend.text = element_text(size = 14),        plot.margin = margin(15,5.5,5.5,5.5))#以显著上下调Top10为例：up <- filter(df, change == 'up') %>% distinct(gene, .keep_all = T) %>%  top_n(10, -log10(padj))down <- filter(df, change == 'down') %>% distinct(gene, .keep_all = T) %>%  top_n(10, -log10(padj))sig <- rbind(up,down)ggplot() +  geom_point(data = df[df$change=='stable',],             aes(x = log2baseMean, y = log2FoldChange, color = change)) +  geom_point(data = df[df$change=='up',],             aes(x = log2baseMean, y = log2FoldChange, color = change)) +  geom_point(data = df[df$change=='down',],             aes(x = log2baseMean, y = log2FoldChange, color = change)) +  geom_point(data = sig,             aes(x = log2baseMean, y = log2FoldChange, color = change),             size = 3.5, alpha = 0.2) +  geom_text_repel(data = sig,                  aes(x = log2baseMean, y = log2FoldChange, label = gene),                  seed = 233,                  size = 3.5,                  color = 'black',                  min.segment.length = 0,                  force = 2,                  force_pull = 2,                  box.padding = 0.1,                  max.overlaps = Inf,                  segment.linetype = 3, #线段类型,1为实线,2-6为不同类型虚线                  segment.color = 'black', #线段颜色                  segment.alpha = 0.5, #线段不透明度                  nudge_x = 10 - sig$A, #标签x轴起始位置                  direction = "y",                  hjust = 0) + #0右对齐，1左对齐，0.5居中   scale_colour_manual(name = '', values = rev(alpha(mycol, 0.7))) +  geom_hline(yintercept = 0, size = 0.5, color = "black", lty = 'dashed') +  labs(title = 'MA_Plot') +  mytheme####----save result----####ggsave('volcano4.png',dpi = 300,bg = 'white',width = 8,height = 7)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="火山图绘制–形式五"><a href="#火山图绘制–形式五" class="headerlink" title="火山图绘制–形式五"></a>火山图绘制–形式五</h4><p><strong>效果如下</strong></p><p><img src="https://s2.loli.net/2023/12/13/RONlEKIrv8GmneQ.png" alt="volcano5.png"></p><p><strong>相关代码</strong></p><pre class="line-numbers language-R"><code class="language-R">########## 双曲线火山图5 ############ rm(list = ls())#相关R包载入：library(dplyr)library(ggplot2)library(ggrepel)library(patchwork)####----load data----####df <- read.table('diff_DEseq2.xls', header = TRUE, sep = "\t",row.names = 1)##筛选阈值确定：p＜0.05，|log2FC|＞1padj = 0.05log2FC = 1#根据反比例函数 y = 1/X和设定的阈值自定义双曲线函数：f <- function(x){  inputx <- seq(0.0001, x, by = 0.0001)  y <- 1/(inputx) + (-log10(padj))  dff <- rbind(data.frame(x = inputx + log2FC, y = y),               data.frame(x = -(inputx + log2FC), y = y))  return(dff)}#根据函数生成所需的曲线数组坐标：dff_curve <- f(5)head(dff_curve)#新增曲线数值列：##每列log2FoldChange值在曲线上对应的y轴坐标；df$curve_y <- case_when(  df$log2FoldChange > 0 ~ 1/(df$log2FoldChange-log2FC) + (-log10(padj)),  df$log2FoldChange <= 0 ~ 1/(-df$log2FoldChange-log2FC) + (-log10(padj)))#根据曲线新增上下调分组标签：#转换为因子指定绘图顺序；df$`-log10(padj)` <- -log10(df$padj) #新增-log10p列df$group2 <- case_when(  df$`-log10(padj)` > df$curve_y & df$log2FoldChange >= log2FC ~ 'up',  df$`-log10(padj)` > df$curve_y & df$log2FoldChange <= -log2FC ~ 'down',  TRUE ~ 'none')#绘制新双曲线阈值火山图：df$group2 <- factor(df$group2, levels = c("up","down","none")) #指定顺序mycol2 <- c("#F8B606","#4A1985","#d8d8d8")#筛选显著性top10标签：top10 <- filter(df, group2 != "none") %>%  distinct(gene, .keep_all = T) %>%  top_n(10, abs(log2FoldChange))ggplot(data = df,             aes(x = log2FoldChange, y = -log10(padj), color = group2)) + #使用新的分组  geom_point(size = 2.2) +  geom_text_repel(data = top10,                  aes(x = log2FoldChange, y = -log10(padj), label = gene),                  force = 80, color = 'black', size = 3.2,                  point.padding = 0.5, hjust = 0.5,                  arrow = arrow(length = unit(0.02, "npc"),                                type = "open", ends = "last"),                  segment.color="black",                  segment.size = 0.3,                  nudge_x = 0,                  nudge_y = 1) +   # scale_x_continuous(limits = c(-4, 4), breaks = seq(-4, 4, by = 2)) +  scale_y_continuous(expand = expansion(add = c(2, 0)),                     limits = c(0, max(range(df$`-log10(padj)`))),                      breaks = seq(0,max(range(df$`-log10(padj)`)), by = 10)) +  scale_colour_manual(name = "", values = alpha(mycol2, 0.7)) +  geom_line(data = dff_curve,            aes(x = x, y = y), #曲线坐标            color = "black",lty = "dashed", size = 0.7) +  theme_classic() +  theme(    axis.title = element_text(size = 15),    axis.text = element_text(size = 14),    legend.text = element_text(size = 14)  )####----save result----####ggsave('volcano5.png',dpi = 300,bg = 'white',width = 8,height = 7)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="火山图绘制–形式六"><a href="#火山图绘制–形式六" class="headerlink" title="火山图绘制–形式六"></a>火山图绘制–形式六</h4><p><strong>效果如下</strong></p><p><img src="https://s2.loli.net/2023/12/13/1AVGngjLmSWqk9F.png" alt="Diagonal_volcano.png"></p><p><strong>相关代码</strong></p><pre class="line-numbers language-R"><code class="language-R">#### 对角火山图 #######rm(list = ls())library(ImageGP)library(ggplot2)library(ggpubr)library(egg)library(ggrepel) #加标签diffexpr <- read.table('HG_data.txt',header = T,sep = '\t',check.names = F)diffexpr$CG_mean <- log10(rowMeans(diffexpr[,c(2:4)])+1)diffexpr$HG_mean <- log10(rowMeans(diffexpr[,c(5:7)])+1)diffexpr$level <- ifelse(diffexpr$`p-value`<0.05,                          ifelse(diffexpr$`log2(Fold_change)`>=1, "high glucose",                                 ifelse(diffexpr$`log2(Fold_change)`<=-1, "normal glucose", "NoSig")),"NoSig")head(diffexpr)##批量手动选择diffexpr  <- diffexpr %>% mutate(label = ifelse(gene %in% c("Nr4a1"),gene,""))p <- sp_scatterplot(diffexpr, xvariable = "HG_mean", yvariable = "CG_mean",                     color_variable = "level",                    color_variable_order = c("NoSig","high glucose", "normal glucose"),                    manual_color_vector = c("grey","firebrick","dodgerblue"),                    legend.position = c(0.2,0.8)) + coord_fixed(1) +   labs(x = 'high glucose log10(mean normalized reads + 1)',       y = 'normal glucose log10(mean normalized reads + 1)')+  geom_label_repel(aes(label = label),show.legend = F,                    size = 3, box.padding = 2,max.overlaps = 10000)xplot <- ggplot(diffexpr, aes(x=HG_mean)) + geom_histogram(fill="firebrick") +  theme_classic() +   theme(axis.line.x=element_blank(),         axis.ticks.x=element_blank(),         axis.text.x = element_blank(),         axis.title.x = element_blank(),        panel.grid.major = element_blank(),        panel.grid.minor = element_blank(),        panel.border = element_blank(),        panel.background = element_blank(),        legend.title = element_blank(),        legend.position = c(0.75,0.85),        #legend.title = element_text(size = 5),         legend.text  = element_text(size = 8),        legend.key.size = unit(0.5, "lines"),        legend.spacing = unit(0.3, "cm"),  ) + ylab("Density")yplot <- ggplot(diffexpr, aes(x=CG_mean)) + geom_histogram(fill="dodgerblue") +  theme_classic() +  theme(axis.line.y=element_blank(),          axis.ticks.y=element_blank(),         axis.text.y = element_blank(),         axis.title.y=element_blank(),        panel.grid.major = element_blank(),        panel.grid.minor = element_blank(),        panel.border = element_blank(),        panel.background = element_blank(),        legend.title = element_blank(),        legend.position = c(0.7,0.8),        #legend.title = element_text(size = 5),         legend.text  = element_text(size = 8),        legend.key.size = unit(0.5, "lines"),        legend.spacing = unit(0.3, "cm"),  ) + ylab("Density") +  rotate()white <- ggplot() + theme_void()pc <- egg::ggarrange(xplot, white, p, yplot,                      widths=c(5,2),heights = c(2,5),padding=unit(0,"line"))ggsave('Diagonal_volcano.png',pc,dpi = 300,bg = 'white',width = 8,height = 7)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="火山图绘制–形式七"><a href="#火山图绘制–形式七" class="headerlink" title="火山图绘制–形式七"></a>火山图绘制–形式七</h4><p><strong>效果如下</strong></p><p><img src="https://s2.loli.net/2023/12/13/1t7GRAJfmPdeYST.png" alt="volcano6.png"></p><p><strong>相关代码</strong></p><pre class="line-numbers language-R"><code class="language-R">######## 多分组多条件 火山图library(scRNAtoolVis)rm(list = ls())DEG1 <- read.table('PN-Normal_DEGs.xls',row.names = 1,header = T,sep = '\t')DEG1$cluster <- 'PN-Normal'DEG2 <- read.table('Psoriasis-Normal_DEGs.xls',row.names = 1,header = T,sep = '\t')DEG2$cluster <- 'Psoriasis-Normal'DEG3 <- read.table('Psoriasis-PN_DEGs.xls',row.names = 1,header = T,sep = '\t')DEG3$cluster <- 'Psoriasis-PN'# rbindmarkers <- rbind(DEG1,DEG2,DEG3)colnames(markers)[1] <- 'avg_log2FC'colnames(markers)[4] <- 'p_val'colnames(markers)[5] <- 'p_val_adj'library(paletteer) col <- paletteer_d("khroma::light")# change aes color typejjVolcano(diffData = markers,          log2FC.cutoff = 0.5,          tile.col = col[3:5],          pSize = 2,          #col.type = "adjustP",          size  = 3,          fontface = 'italic',          legend.position = c(0.1,0.9),          topGeneN = 5)ggsave('volcano6.png',dpi = 300,bg = 'white',width = 8,height = 7)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="火山图绘制–形式八"><a href="#火山图绘制–形式八" class="headerlink" title="火山图绘制–形式八"></a>火山图绘制–形式八</h4><p><strong>效果如下</strong></p><p><img src="https://s2.loli.net/2023/12/13/OnrVGZqMN9oD4W3.png" alt="volcano7.png"></p><p><strong>相关代码</strong></p><pre class="line-numbers language-R"><code class="language-R">######### 自定义函数 ######### color.pals = c("#DC143C","#0000FF","#20B2AA","#FFA500","#9370DB","#98FB98","#F08080","#1E90FF","#7CFC00","#FFFF00","#808000","#FF00FF","#FA8072","#7B68EE","#9400D3","#800080","#A0522D","#D2B48C","#D2691E","#87CEEB","#40E0D0","#5F9EA0","#FF1493","#0000CD","#008B8B","#FFE4B5","#8A2BE2","#228B22","#E9967A","#4682B4","#32CD32","#F0E68C","#FFFFE0","#EE82EE","#FF6347","#6A5ACD","#9932CC","#8B008B","#8B4513","#DEB887")##' multi volcano plot for scRNA-seq#' @version 0.2 change legend order#' @version 0.3 add max_overlaps for annotation#'#' @param dat Seurat FindAllMarkers returns, must set only.pos = F;#' @param color.arr color list, default same as Seurat#' @param onlyAnnotateUp only annote gene symbols for up genes#' @param log2Foldchang threshold for annotation#' @param adjp  threshold for annotation#' @param top_marker gene number for annotation#' @param max_overlaps annotation label overlapping#'#' @return ggplot2 obj#' @export#'#' @examplesmultiVolcanoPlot = function(dat, color.arr=NULL, onlyAnnotateUp=T,                            log2Foldchang=0.58, adjp=0.05, top_marker=5,                             max_overlaps=10, width=0.9){  library(dplyr)  library(ggrepel)  # set default color list  if(is.null(color.arr)){    len = length(unique(dat$cluster))    color.arr=scales::hue_pal()(len)  }    dat.plot <- dat %>% mutate(    "significance"=case_when(p_val_adj < adjp & avg_log2FC >= log2Foldchang  ~ 'Up',                             p_val_adj < adjp & avg_log2FC <= -log2Foldchang  ~ 'Down',                             TRUE ~ 'None'))  tbl = table(dat.plot$significance)  print( tbl )  background.dat <- data.frame(    dat.plot %>% group_by(cluster) %>% filter(avg_log2FC>0) %>%      summarise("y.localup"=max(avg_log2FC)),    dat.plot %>% group_by(cluster) %>% filter(avg_log2FC<=0) %>%      summarise("y.localdown"=min(avg_log2FC)),    x.local=seq(1:length(unique(dat.plot$cluster)))  ) %>% select(-cluster.1)  #names(background.dat)  #head(background.dat)  #dim(background.dat)    #  x.number <- background.dat %>% select(cluster, x.local)  dat.plot <- dat.plot%>% left_join(x.number,by = "cluster")  #names(dat.plot)  #head(dat.plot)    #selecting top-up and top-down proteins  dat.marked.up <- dat.plot %>% filter(significance=="Up") %>%    group_by(cluster) %>% arrange(-avg_log2FC) %>%    top_n(top_marker,abs(avg_log2FC))  dat.marked.down <- dat.plot %>% filter(significance=="Down") %>%    group_by(cluster) %>% arrange(avg_log2FC) %>%    top_n(top_marker,abs(avg_log2FC))  dat.marked <- dat.marked.up %>% bind_rows(dat.marked.down)  #referring group information data  dat.infor <- background.dat %>%    mutate("y.infor"=rep(0,length(cluster)))  #names(dat.infor)  #dim(dat.infor)  #head(dat.infor)    ##plotting:  #setting color by loading local color schemes  vol.plot <- ggplot()+    # background    geom_col(background.dat,mapping=aes(x.local, y.localup),             fill="grey80", alpha=0.2, width=0.9, just = 0.5)+    geom_col(background.dat,mapping=aes(x.local,y.localdown),             fill="grey80", alpha=0.2, width=0.9, just = 0.5)+    # point plot    geom_jitter(dat.plot, mapping=aes(x.local, avg_log2FC, #x= should be number, Not string or factor                                      color=significance),                size=0.8, width = 0.4, alpha= 1)+    scale_color_manual(name="significance",                        breaks = c('Up', 'None', 'Down'),                       values = c("#d56e5e","#cccccc", "#5390b5")) + #set color for: Down None   Up    geom_tile(dat.infor, mapping=aes(x.local, y.infor), #x axis color box              height = log2Foldchang*1.3,              fill = color.arr[1:length(unique(dat.plot$cluster))],              alpha = 0.5,              width=width) +    labs(x=NULL,y="log2 Fold change")+    geom_text(dat.infor, mapping=aes(x.local,y.infor,label=cluster))+    # Down is not recommend, not meaningful, hard to explain; so prefer dat.marked.up to dat.marked    ggrepel::geom_label_repel(data=if(onlyAnnotateUp) dat.marked.up else dat.marked, #gene symbol, of up group default                              mapping=aes(x=x.local, y=avg_log2FC, label=gene),                              force = 2, #size=2,                              max.overlaps = max_overlaps,                              label.size = 0, #no border                              fill="#00000000", #box fill color                              seed = 233,                              min.segment.length = 0,                              force_pull = 2,                              box.padding = 0.1,                              segment.linetype = 3,                              #segment.color = 'black',                              #segment.alpha = 0.5,                              #direction = "x", #line direction                              hjust = 0.5)+    annotate("text", x=1.5, y=max(background.dat$y.localup)+1,             label=paste0("|log2FC|>=", log2Foldchang, " & FDR<", adjp))+    theme_classic(base_size = 12)+        theme(      axis.title = element_text(size = 13, color = "black"),      axis.text = element_text(size = 15, color = "black"),      axis.line.y = element_line(color = "black", size = 0.8),      #      axis.line.x = element_blank(), #no x axis line      axis.ticks.x = element_blank(), #no x axis ticks      axis.title.x = element_blank(), #      axis.text.x = element_blank(),      #      legend.spacing.x = unit(0.1,'cm'),      legend.key.width = unit(0.5,'cm'),      legend.key.height = unit(0.5,'cm'),      legend.background = element_blank(),      legend.box = "horizontal",      legend.position = c(0.13, 0.77),legend.justification = c(1,0)    )+    guides( #color = guide_legend( override.aes = list(size=5) ), #legend circle size      color=guide_legend( override.aes = list(size=5), title="Change")    )  #guides(fill=guide_legend(title="Change"))+ #change legend title  vol.plot}## 调用自定义函数绘图multiVolcanoPlot(markers,log2Foldchang = 0.5,adjp = 0.05,color.arr = col)# multiVolcanoPlot(scObj.markers.time, onlyAnnotateUp = F)ggsave('volcano7.png',dpi = 300,bg = 'white',width = 8,height = 7)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>最后，如果项目和教程对你有所帮助或者你看见了还算比较喜欢，欢迎给我<code>star</code>，谢谢您！</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R visualization </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Volcano plot </tag>
            
            <tag> ggplot2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习Git使用</title>
      <link href="/2023/12/01/learn-git/"/>
      <url>/2023/12/01/learn-git/</url>
      
        <content type="html"><![CDATA[<h3 id="学习Git使用"><a href="#学习Git使用" class="headerlink" title="学习Git使用"></a>学习Git使用</h3><h4 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h4><p>Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。</p><h4 id="工作原理-流程："><a href="#工作原理-流程：" class="headerlink" title="工作原理 / 流程："></a>工作原理 / 流程：</h4><p><img src="https://s2.loli.net/2023/12/01/CQH8FRPV2AItKBd.png" alt="image.png"></p><ul><li>Workspace：工作区</li><li>Index / Stage：暂存区</li><li>Repository：仓库区（或本地仓库）</li><li>Remote：远程仓库</li></ul><h4 id="Git-常用命令（Fork-from-阮老师博客）"><a href="#Git-常用命令（Fork-from-阮老师博客）" class="headerlink" title="Git 常用命令（Fork from 阮老师博客）"></a>Git 常用命令（Fork from <a href="https://link.zhihu.com/?target=http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html">阮老师博客</a>）</h4><h5 id="1-新建代码管理库"><a href="#1-新建代码管理库" class="headerlink" title="1.新建代码管理库"></a>1.新建代码管理库</h5><pre class="line-numbers language-shell"><code class="language-shell"># 在当前目录新建一个Git代码库git init# 新建一个目录，将其初始化为Git代码库git init [project-name]# 下载一个项目和它的整个代码历史git clone [url]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-Git配置"><a href="#2-Git配置" class="headerlink" title="2.Git配置"></a>2.Git配置</h5><p>Git的设置文件为<code>.gitconfig</code>，它可以在用户主目录下，也可以在项目目录下。</p><pre class="line-numbers language-shell"><code class="language-shell"># 显示当前的Git配置 git config --list # 编辑Git配置文件 git config -e [--global] # 设置提交代码时的用户信息 git config [--global] user.name "[name]" git config [--global] user.email "[email address]"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Note：也可以通过这种方式设置快捷键</code></p><pre class="line-numbers language-shell"><code class="language-shell"># 简化常用的命名，配置别名git status # 原先的命名git config --global alias.st status # 表示用st代表statusgit st # 使用别名的命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-增加-删除文件"><a href="#3-增加-删除文件" class="headerlink" title="3.增加/删除文件"></a>3.增加/删除文件</h5><pre class="line-numbers language-shell"><code class="language-shell"># 添加指定文件到暂存区 git add [file1] [file2] ... # 添加指定目录到暂存区，包括子目录 git add [dir] # 添加当前目录的所有文件到暂存区 git add . # 删除工作区文件，并且将这次删除放入暂存区 git rm [file1] [file2] ... # 停止追踪指定文件，但该文件会保留在工作区 git rm --cached [file] # 改名文件，并且将这个改名放入暂存区 git mv [file-original] [file-renamed]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-代码提交"><a href="#4-代码提交" class="headerlink" title="4.代码提交"></a>4.代码提交</h5><pre class="line-numbers language-shell"><code class="language-shell"># 提交暂存区到仓库区 git commit -m [message] # 提交暂存区的指定文件到仓库区 git commit [file1] [file2] ... -m [message] # 提交工作区自上次commit之后的变化，直接到仓库区 git commit -a # 提交时显示所有diff信息 git commit -v # 使用一次新的commit，替代上一次提交 # 如果代码没有任何新变化，则用来改写上一次commit的提交信息 git commit --amend -m [message] # 重做上一次commit，并包括指定文件的新变化 git commit --amend <file1> <file2> ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="5-分支新建与删除"><a href="#5-分支新建与删除" class="headerlink" title="5.分支新建与删除"></a>5.分支新建与删除</h5><pre class="line-numbers language-shell"><code class="language-shell"># 列出所有本地分支 git branch # 列出所有远程分支 git branch -r# 列出所有本地分支和远程分支 git branch -a # 新建一个分支，但依然停留在当前分支 git branch [branch-name] # 新建一个分支，并切换到该分支git checkout -b [branch]# 新建一个分支，指向指定commitgit branch [branch] [commit]# 新建一个分支，与指定的远程分支建立追踪关系 git branch --track [branch] [remote-branch] # 切换到指定分支，并更新工作区 git checkout [branch-name] # 建立追踪关系，在现有分支与指定的远程分支之间 git branch --set-upstream [branch] [remote-branch] # 合并指定分支到当前分支 git merge [branch] 选择一个commit，合并进当前分支 git cherry-pick [commit] # 删除分支 git branch -d [branch-name] # 删除远程分支 git push origin --delete <branch-name> git branch -dr <remote/branch><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="6-标签"><a href="#6-标签" class="headerlink" title="6.标签"></a>6.标签</h5><pre class="line-numbers language-shell"><code class="language-shell"># 列出所有tag git tag # 新建一个tag在当前commit git tag [tag] # 新建一个tag在指定commit git tag [tag] [commit] # 查看tag信息 git show [tag] # 提交指定tag git push [remote] [tag] # 提交所有tag git push [remote] --tags # 新建一个分支，指向某个tag git checkout -b [branch] [tag]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="7-查看信息及版本切换（git-log"><a href="#7-查看信息及版本切换（git-log" class="headerlink" title="7. 查看信息及版本切换（git log)"></a>7. 查看信息及版本切换（git log)</h5><pre class="line-numbers language-shell"><code class="language-shell"># 显示有变更的文件 git status # 显示当前分支的版本历史 git log # 显示commit历史，以及每次commit发生变更的文件 git log --stat # 显示某个文件的版本历史，包括文件改名 git log --follow [file] git whatchanged [file] # 显示指定文件相关的每一次diff git log -p [file] # 显示指定文件是什么人在什么时间修改过 git blame [file] # 显示暂存区和工作区的差异 git diff # 显示暂存区和上一个commit的差异 git diff --cached [<file>] # 显示工作区与当前分支最新commit之间的差异 git diff HEAD # 显示两次提交之间的差异 git diff [first-branch]...[second-branch] # 显示某次提交的元数据和内容变化 git show [commit] # 显示某次提交发生变化的文件 git show --name-only [commit] # 显示某次提交时，某个文件的内容 git show [commit]:[filename] # 显示当前分支的最近几次提交 git reflog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="8-远程同步"><a href="#8-远程同步" class="headerlink" title="8.远程同步"></a>8.远程同步</h5><pre class="line-numbers language-shell"><code class="language-shell"># 下载远程仓库的所有变动 git fetch [remote] # 显示所有远程仓库 git remote -v # 显示某个远程仓库的信息 git remote show [remote] # 增加一个新的远程仓库，并命名 git remote add [shortname] [url] # 取回远程仓库的变化，并与本地分支合并 git pull [remote] [branch] # 上传本地指定分支到远程仓库 git push [remote] [branch] # 强行推送当前分支到远程仓库，即使有冲突 git push [remote] --force # 推送所有分支到远程仓库 git push [remote] --all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="9-撤销checkout"><a href="#9-撤销checkout" class="headerlink" title="9.撤销checkout"></a>9.撤销checkout</h5><pre class="line-numbers language-shell"><code class="language-shell"># 恢复暂存区的指定文件到工作区 git checkout [file] # 恢复某个commit的指定文件到工作区 git checkout [commit] [file] # 恢复上一个commit的所有文件到工作区 git checkout . # 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变 git reset [file] # 重置暂存区与工作区，与上一次commit保持一致 git reset --hard # 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变 git reset [commit] # 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致 git reset --hard [commit] # 重置当前HEAD为指定commit，但保持暂存区和工作区不变 git reset --keep [commit] # 新建一个commit，用来撤销指定commit # 后者的所有变化都将被前者抵消，并且应用到当前分支 git revert [commit]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="10-其他"><a href="#10-其他" class="headerlink" title="10.其他"></a>10.其他</h5><pre class="line-numbers language-shell"><code class="language-shell"># 生成一个可供发布的压缩包git archive<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p><strong>最后，如果项目和教程对你有所帮助或者你看见了还算比较喜欢，欢迎给我<code>star</code>，谢谢您！</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程工具学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Tips </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习Typora使用</title>
      <link href="/2023/11/29/learn-typora/"/>
      <url>/2023/11/29/learn-typora/</url>
      
        <content type="html"><![CDATA[<h3 id="学习Typora使用"><a href="#学习Typora使用" class="headerlink" title="学习Typora使用"></a>学习Typora使用</h3><h4 id="Typora简介"><a href="#Typora简介" class="headerlink" title="Typora简介"></a>Typora简介</h4><p>Typora是一款轻便简洁的Markdown编辑器，支持即时渲染技术，这也是与其他Markdown编辑器最显著的区别。即时渲染使得你写Markdown就想是写Word文档一样流畅自如，不像其他编辑器的有编辑栏和显示栏。</p><ul><li>Typora删除了预览窗口，以及所有其他不必要的干扰。取而代之的是实时预览。</li><li>Markdown的语法因不同的解析器或编辑器而异，Typora使用的是GitHub Flavored Markdown。</li></ul><h4 id="Markdown的介绍"><a href="#Markdown的介绍" class="headerlink" title="Markdown的介绍"></a>Markdown的介绍</h4><ul><li>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</li><li>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</li><li>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</li><li>Markdown 编写的文档后缀为 <code>.md</code>, <code>.markdown</code>。</li></ul><h3 id="Typora基本技巧"><a href="#Typora基本技巧" class="headerlink" title="Typora基本技巧"></a>Typora基本技巧</h3><h4 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h4><ul><li>加粗： <code>Ctrl + B</code></li><li>撤销： <code>Ctrl + Z</code></li><li>字体倾斜 ：<code>Ctrl+I</code></li><li>下划线：<code>Ctrl+U</code></li><li>多级标题： <code>Ctrl + 1~6</code></li><li>有序列表：<code>Ctrl + Shift + [</code></li><li>无序列表：<code>Ctrl + Shift + ]</code></li><li>降级快捷键 ：<code>Tab</code></li><li>升级快捷键：<code>Shift + Tab</code></li><li>插入链接： <code>Ctrl + K</code></li><li>插入公式： <code>Ctrl + Shift + M</code></li><li>行内代码： <code>Ctrl + Shift + K</code></li><li>插入图片： <code>Ctrl + Shift + I</code></li><li>返回Typora顶部：<code>Ctrl+Home</code></li><li>返回Typora底部 ：<code>Ctrl+End</code></li><li>创建表格 ：<code>Ctrl+T</code></li><li>选中某句话 ：<code>Ctrl+L</code></li><li>选中某个单词 ：<code>Ctrl+D</code></li><li>选中相同格式的文字 ：<code>Ctrl+E</code></li><li>搜索: <code>Ctrl+F</code></li><li>搜索并替换 ：<code>Ctrl+H</code></li><li>删除线 ：<code>Alt+Shift+5</code></li><li>引用 ：<code>Ctrl+Shift+Q</code></li><li>生成目录：<code>[TOC]+Enter</code></li></ul><p>注：一些实体符号需要在实体符号之前加” \ ”才能够显示。</p><h3 id="各个元素具体介绍"><a href="#各个元素具体介绍" class="headerlink" title="各个元素具体介绍"></a>各个元素具体介绍</h3><h4 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h4><blockquote><p>输入[TOC]即可产生菜单，菜单会自动更新</p></blockquote><p><strong>区域元素（在文章的最上方输入—，按换行键产生，然后在里面输入内容即可）</strong></p><hr><p><code>YAML FONT Matters</code></p><h4 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h4><blockquote><p>按换行键[Enter]建立新的一行,按<code>Shift</code>+<code>Enter</code>可以创建一个比段落间距更小的行间距。可在行尾插入打断线，禁止向后插入。</p></blockquote><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>开头#的个数表示，空格+文字。标题有1~6个级别，#表示开始，按换行键结束。快捷键：<code>CTRL + 数字</code></p><h4 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h4><p>斜体以**或__括住</p><blockquote><p><em>这是斜体字体1</em><em>这是斜体字体2</em></p></blockquote><p>加粗<br>开头<code>**</code>，结尾<code>**</code>。<br>或者开头<code>__</code>,结尾<code>__</code>(两个短横线)。</p><blockquote><p><strong>这是加粗字体1</strong> <strong>这是加粗字体2</strong></p></blockquote><p>删除线<br>开头<code>~~</code>，结尾<code>~~</code>。</p><p><del>这是错误文字</del></p><p>下划线使用HTML标签<u>下划线</u></p><blockquote><p><u>下划线</u></p></blockquote><p>高亮</p><p><code>==内容==</code>，需要自己在偏好设置里面打开这项功能</p><blockquote><p>==高亮==</p></blockquote><p>==高亮==</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>行内输入代码块快捷键： <code>Ctrl + Shift + K</code></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"hello world!"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="数学式"><a href="#数学式" class="headerlink" title="数学式"></a>数学式</h4><p>打开Typora选择数学模块的三种方式：</p><ul><li>点击“段落”—&gt;“公式块”</li><li>快捷键Ctrl+Shift+m</li><li><code>“$$”+回车</code></li></ul><p>$$<br>\lim_{x\to\infty}\exp(-x)=0<br>$$</p><p>下标使用~~括住内容。需要自己在偏好设置里面打开这项功能</p><blockquote><p>H<del>2</del>O</p></blockquote><p>上标, 使用^括住内容。需要自己在偏好设置里面打开这项功能</p><blockquote><p>2^10^</p></blockquote><h4 id="表情"><a href="#表情" class="headerlink" title="表情"></a>表情</h4><p>Typora语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。</p><blockquote><p>以:开始，然后输入表情的英文单词,以：结尾，将直接输入该表情.例如：<br>​<code>​:smile:​</code><br><code>​:cry:​</code><br><code>​:happy:​</code></p></blockquote><p><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p><span class="github-emoji"><span>😢</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p>:happy:</p><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p>开头|+列名+|+列名+|+换行键，创建一个2*2表格，<code>Ctrl+Enter</code>可建立新行。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><p>输入 <code>***</code> 或者 <code>---</code>,按换行键换行，即可绘制一条水平线。</p><hr><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><p>开头&gt;表示，空格+文字，按换行键换行，<strong>双按换行跳出</strong></p><blockquote><p>引注1</p><p>….</p><p>引注n</p></blockquote><ul><li>第一项</li></ul><blockquote><p>引用1</p></blockquote><ul><li>第二项</li></ul><blockquote><p>引用2</p></blockquote><p>引用里嵌套代码块</p><blockquote><p>引用嵌套代码</p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># this is python code</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Hello python!'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h4><p>在需要添加脚注的文字后面+[+^+序列+]，注释的产生可以鼠标放置其上单击自动产生，添加信息</p><p><code>脚注产生的方法[^footnote].</code></p><p>脚注产生的方法[^1]</p><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><p>链接<br>输入网址，单击链接，展开后可编辑<br>ctr+单击，打开链接<br>例如：<a href="https://link.zhihu.com/?target=https://www.baidu.com">https://www.baidu.com</a></p><p><code>文字链接 [链接名称](http://链接网址)网址链接 &lt;http://链接网址&gt; [百度](https://www.baidu.com)</code></p><p><a href="https://www.baidu.com/">百度</a></p><h4 id="URLs"><a href="#URLs" class="headerlink" title="URLs"></a>URLs</h4><p>用&lt;&gt;括住url，可手动设置url对于标准URLs，可自动识别</p><p><code>&lt;www.baidu.com&gt;</code></p><p>&lt;<a href="http://www.baidu.com>">www.baidu.com&gt;</a></p><h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><blockquote><p>Typora文本文档中有使用图片内容，如果需要发布在各个兼容Markdown的软件平台，需要预先上传文档中的图片至图床，再通过对图床的图片链接调用，才能正常显示，否则各个平台将无法看到该文档图片。<br>免费图床网址：<a href="https://link.zhihu.com/?target=https://sm.ms/">https://sm.ms/</a>图床设置：[Typora图床自动上传图片设置篇]</p></blockquote><p>1.手动添加：跟链接的方法区别在于前面加了个感叹号 <code>!</code>，这样是不是觉得好记多了呢？</p><p><code>![图片名称](http://图片网址)</code></p><p>2.除了以上方式之外，还可以直接将图片拖拽进来，自动生成链接。</p><p><img src="https://s2.loli.net/2023/11/29/GeDVvjFb5MISyOH.jpg" alt="微信图片_20230710153507.jpg"></p><blockquote><p><strong>最后，如果项目和教程对你有所帮助或者你看见了还算比较喜欢，欢迎给我<code>star</code>，谢谢您！</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程工具学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客开源</title>
      <link href="/2023/11/27/blog-open-source/"/>
      <url>/2023/11/27/blog-open-source/</url>
      
        <content type="html"><![CDATA[<h1 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h1><p><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Blog-Open-Source/blog-demo1.gif" alt="演示Demo"></p><h1 id="简短介绍"><a href="#简短介绍" class="headerlink" title="简短介绍"></a>简短介绍</h1><p>倒腾了一两周总算把个人博客网站完善了，目前这个版本使用应该是够了，当然还有一些优化项和功能增加后续在慢慢更新，为了回馈开源，今天准备把我自己修改完善的<code>blog</code>网站源代码开源。这不是生成后的网页文件，是您可以直接使用的源码，您只需要把博客相关信息换成您自己的就可以部署了，对于新手或者不懂编程的小伙伴来说，简直是福音，极大简化了您构建博客的工作量和复杂度，每个人都可以下载并修改成自己喜欢样式！如果你有修改想法，欢迎PR！最后，我们还是给这个开源小项目取个名字吧，就叫<a href="https://github.com/shw2018/hexo-blog-fly.git">hexo-blog-fly</a>吧，怎么样？&lt;&lt;&lt;&lt;&lt;<a href="https://github.com/shw2018/hexo-blog-fly">源代码下载</a>&gt;&gt;&gt;&gt;&gt;</p><p>本博客基于<code>Hexo</code>框架搭建，用到<a href="https://github.com/shw2018/hexo-theme-matery">hexo-theme-matery</a>主题, 并在此基础之上做了很多修改，修复了一些bug，增加了一些新的特性和功能，博客地址：<a href="https://shw2018.github.io/">https://shw2018.github.io</a>，博客演示：<a href="https://sunhwee.com/">sunhwee.com</a>。</p><hr><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><p><strong>原主题特性</strong>:</p><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li></ul><p> <strong>增加的工作或特性(未打钩的是已做但还没更新到源码的)</strong>:</p><ul><li>修改了原主题的一些很多<code>bug</code>   2019.08.05</li><li>加入图片懒加载功能，在根目录配置文件开启和关闭    2019.08.09</li><li>增加<code>留言板</code>功能          2019.08.05</li><li>在关于板块,加入<code>简历</code>功能页   2019.08.05</li><li>增加视听[视觉听觉影音]板块       2019.08.10</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。  2019.08.10</li><li>增加网站运行时间显示  2019.08.10</li><li>增加<code>动漫模型</code>     2019.08.10</li><li>整体替换Banner图片和文章特色图片   2019.08.10</li><li>增加分类<code>相册</code>功能         2019.08.29</li><li>去掉标签页,将其合并至<code>分类</code>页中                2019.09.01</li><li>修改了一些控件的参数   2019.09.01</li><li>修改部分样式,比如: 文章卡片,固定高度,使其不至于因为文章摘要的长短不同导致卡片大小不一使页面布局很不美观,类似的还有友链卡片,优化了页面内容布局,视觉更整齐美观          2019.09.01</li><li>解决首页文章列表卡片上方 <code>border-radius</code>圆角失效的bug  2019.09.01</li><li>添加页面樱花飘落动效            2019.09.09</li><li>添加鼠标点击烟花爆炸动效   2019.09.09</li><li>加入天气接口控件   2019.09.09</li><li>加入鼠标点击文字特效   2019.09.10</li><li>添加页面雪花飘落动效            2019.09.10</li><li>添加在线聊天插件            2019.09.12</li><li>持续更新…</li></ul><hr><p><strong>简单使用方法：</strong></p><ol><li><code>star</code> 本项目</li><li>安装<a href="https://git-scm.com/downloads">Git</a>, 安装<a href="https://nodejs.org/en/">nodeJS</a></li><li>你可以直接<code>fork</code>一份源码到你的仓库，<code>clone</code>到本地</li><li>在本地博客仓库运行<code>npm i</code>命令安装依赖包</li><li>修改配置信息，改成自己的信息</li><li>运行命令<code>hexo  clean</code>（清除生成文件），<code>hexo g</code>（生成网页）， <code>hexo  s</code>（本地预览），<code>hexo d</code>（部署）</li></ol><blockquote><p><strong>更多详情教程，强烈推荐看我写的：<a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></strong></p></blockquote><blockquote><p><strong>最后，如果项目和教程对你有所帮助或者你看见了还算比较喜欢，欢迎给我<code>star</code>，谢谢您！</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件安装与配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
